class Solution {
public:
    struct cmp{
    bool operator()(pair<int,int> a,pair<int,int> b)
    {
        return a.second<b.second;
    }
    };
    vector<int> topKFrequent(vector<int>& nums, int k) {
        int n=nums.size();
        unordered_map<int,int> mp;
        vector<int> ans;
        priority_queue<pair<int,int>,vector<pair<int,int>>,cmp> pq;
        for(auto it : nums)
            mp[it]++;
        for(auto element : mp)
        {
            pq.push({element.first,element.second});
        }
        while(k--)
        {
            ans.push_back(pq.top().first);
            pq.pop();
        }
        return ans;
        

    }
};
