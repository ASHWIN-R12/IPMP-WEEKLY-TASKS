/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> ans;
        map<int,map<int,multiset<int>>> nodes;
        queue<pair<TreeNode* ,pair<int,int>>> q;
        q.push({root,{0,0}});
        while(!q.empty())
        {
            auto p=q.front();
            q.pop();
            int i=p.second.first;
            int j=p.second.second;
            nodes[i][j].insert(p.first->val);
            if(p.first->left)
            {
                q.push({p.first->left,{i-1,j+1}});
            }
            if(p.first->right)
            {
                q.push({p.first->right,{i+1,j+1}});
            }
        }
        for(auto x : nodes)
        {
            vector<int> column;
            for(auto y : x.second)
            {
                column.insert(column.end(),y.second.begin(),y.second.end());
            }
            ans.push_back(column);
        }
        return ans;
    }
};
