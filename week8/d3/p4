class Solution {
public:
    int maxarea(vector<int>& heights)
    {
        int n=heights.size();
        int maxi=INT_MIN;
        stack<int> st;
        for(int i=0;i<=n;i++)
        {
            while(!st.empty() && ((i==n)||heights[st.top()]>=heights[i]))
            {
                int height=heights[st.top()];
                st.pop();
                int width;
                if(st.empty())
                {
                    width=i;
                }
                else
                {
                    width=i-st.top()-1;
                }
                maxi=max(maxi,height*width);
            }
            st.push(i);
        }
        return maxi;
    }
    int maximalRectangle(vector<vector<char>>& matrix) {
        if(matrix.empty())
            return 0;
        int maxa=INT_MIN;
        vector<int> height(matrix[0].size(),0);
        for(int i=0;i<matrix.size();i++)
        {
            for(int j=0;j<matrix[0].size();j++)
            {
                if(matrix[i][j]=='0')
                {
                    height[j]=0;
                }
                else
                {
                    height[j]++;
                }
            }
            maxa=max(maxa,maxarea(height));
        }
        return maxa;
    }
};
